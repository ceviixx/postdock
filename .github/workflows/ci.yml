name: Build and Push

on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [backend, frontend]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tags
        id: prep_tag
        run: |
          RELEASE_TAG=${{ github.event.release.tag_name }}
          echo "release_tag=ghcr.io/${{ github.repository_owner }}/postdock-${{ matrix.service }}:${RELEASE_TAG}" >> $GITHUB_OUTPUT
          echo "latest_tag=ghcr.io/${{ github.repository_owner }}/postdock-${{ matrix.service }}:latest" >> $GITHUB_OUTPUT
          echo "platform_tag_amd64=ghcr.io/${{ github.repository_owner }}/postdock-${{ matrix.service }}:latest-amd64" >> $GITHUB_OUTPUT
          echo "platform_tag_arm64=ghcr.io/${{ github.repository_owner }}/postdock-${{ matrix.service }}:latest-arm64" >> $GITHUB_OUTPUT

      - name: Build and push ${{ matrix.service }} image (multiarch)
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.prep_tag.outputs.release_tag }}
            ${{ steps.prep_tag.outputs.latest_tag }}
            ${{ steps.prep_tag.outputs.platform_tag_amd64 }}
            ${{ steps.prep_tag.outputs.platform_tag_arm64 }}